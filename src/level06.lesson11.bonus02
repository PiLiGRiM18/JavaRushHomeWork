package com.javarush.test.level06.lesson11.bonus02;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/* Нужно добавить в программу новую функциональность
Задача: У каждой кошки есть имя и кошка-мама. Создать класс, который бы описывал данную ситуацию. Создать два объекта: кошку-дочь и кошку-маму. Вывести их на экран.
Новая задача: У каждой кошки есть имя, кошка-папа и кошка-мама. Изменить класс Cat так, чтобы он мог описать данную ситуацию.
Создать 6 объектов: маму, папу, сына, дочь, бабушку(мамина мама) и дедушку(папин папа).
Вывести их всех на экран в порядке: дедушка, бабушка, папа, мама, сын, дочь.

Пример ввода:
дедушка Вася
бабушка Мурка
папа Котофей
мама Василиса
сын Мурчик
дочь Пушинка

Пример вывода:
Cat name is дедушка Вася, no mother, no father
Cat name is бабушка Мурка, no mother, no father
Cat name is папа Котофей, no mother, father is дедушка Вася
Cat name is мама Василиса, mother is бабушка Мурка, no father
Cat name is сын Мурчик, mother is мама Василиса, father is папа Котофей
Cat name is дочь Пушинка, mother is мама Василиса, father is папа Котофей
*/

public class Solution
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

  //     System.out.println("Имя дедушки (папин папа)");
        String grandpaName = reader.readLine();
        Cat catGrandpa = new Cat(grandpaName, null, null, true);

    //    System.out.println("Имя бабушки (мамина мама)");
        String grandmaName = reader.readLine();
        Cat catGrandma = new Cat(grandmaName, null, null, false);

      //  System.out.println("Имя папы");
        String fatherName = reader.readLine();
        Cat catFather = new Cat(fatherName, grandpaName, null, true);

       // System.out.println("Имя мамы");
        String motherName = reader.readLine();
        Cat catMother = new Cat(motherName, null, grandmaName, false);

       // System.out.println("Имя сына");
        String sonName = reader.readLine();
        Cat catSon = new Cat(sonName, fatherName, motherName, true);

       // System.out.println("Имя дочери");
        String daughterName = reader.readLine();
        Cat catDaughter = new Cat(daughterName, fatherName, motherName, false);

        System.out.println(catGrandpa);
        System.out.println(catGrandma);
        System.out.println(catFather);
        System.out.println(catMother);
        System.out.println(catSon);
        System.out.println(catDaughter);
    }

    public static class Cat
    {
        private String name;
        private String father;
        private String mother;
        private boolean gender;

        public Cat(String name, String father, String mother, boolean gender)
        {
            this.name = name;
            this.father = father;
            this.mother = mother;
            this.gender = gender;
        }

        @Override
        public String toString()
        {
            if (mother == null && father == null && gender == true) return "Cat name is дедушка " + name + ", no mother, no father";
            if (mother == null && father == null && gender == false) return "Cat name is бабушка " + name + ", no mother, no father";
            if (mother == null && father != null && gender == true) return "Cat name is папа " + name + ", no mother, father is дедушка " + father;
            if (father == null && mother != null && gender == false) return "Cat name is мама " + name + ", mother is бабушка " + mother + ", no father";
            if (father != null && mother != null && gender == true) return "Cat name is сын " + name + ", mother is мама " + mother + ", father is папа " + father;
            if (father != null && mother != null && gender == false) return "Cat name is дочь " + name + ", mother is мама " + mother + ", father is папа " + father;
            else return null;
        }
    }

}
